@page "/categorias"
@using PropiedadesBlazor.Modelos.DTO
@using PropiedadesBlazor.Repository
@inject ICategoriaRepositorio CategoriaRepositorio

<h1 class="text-center">Categorias</h1>

<div class="card">
	<div class="card-header">
		<div class="row">
			<div class="col-7">
				<h4 class="card-title text-dark">
					Lista de Categorias
				</h4>
			</div>
			<div class="col-3 offset-2">
				<NavLink href="crear-categoria" class="btn btn-primary">
					<i class="bi bi-plus-circle-fill mx-1"> </i> Nueva Categoria
				</NavLink>
			</div>
		</div>
	</div>
	<div class="card-body">
		<table class="table table-bordered table-hover">
			<thead>
				<tr>
					<th>Id</th>
					<th>Nombre</th>
					<th>Descripcion</th>
					<th>Acciones</th>
				</tr>
			</thead>
			<tbody>
				@if (categoriaDTO.Count() > 0)
				{
					foreach (var categoria in categoriaDTO)
					{
						<tr>
							<td>@categoria.Id</td>
							<td>@categoria.NombreCategoria</td>
							<td>@categoria.Descripcion</td>
							<td>
								<NavLink href="@($"editar-categoria/{categoria.Id}")" class="btn btn-success">
									<i class="bi bi-gear-fill mx-1"></i>
								</NavLink>
								<button class="btn btn-danger" @onclick="()=>ManejadorOnBorrar(categoria.Id)">
									<i class="bi bi-trash-fill mx-1"></i>
								</button>
							</td>
						</tr>
					}
				}
				else
				{
					<tr>
						<td colspan="5">No hay registros</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

@code {
	private IEnumerable<CategoriaDTO> categoriaDTO { get; set; } = new List<CategoriaDTO>();

	protected override async Task OnInitializedAsync()
	{
		categoriaDTO = await CategoriaRepositorio.GetAll();
	}

	private async Task ManejadorOnBorrar(int categoriaId)
	{
		
	}
}
